name: Documentation

on:
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'core/**'
      - 'mining/**'
      - 'network/**'
      - 'contracts/**'
      - 'ai3-lib/**'
      - '*.md'
      - '.github/workflows/docs.yml'
  pull_request:
    branches: [ main ]
    paths:
      - '*.md'
      - '.github/workflows/docs.yml'

jobs:
  generate-docs:
    name: Generate Documentation
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libclang-dev

    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-docs-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Generate Rust documentation
      run: |
        cargo doc --workspace --no-deps --document-private-items
        echo '<meta http-equiv="refresh" content="0; url=tribechain/index.html">' > target/doc/index.html

    - name: Install mdBook
      run: |
        curl -L https://github.com/rust-lang/mdBook/releases/download/v0.4.36/mdbook-v0.4.36-x86_64-unknown-linux-gnu.tar.gz | tar xz
        chmod +x mdbook
        sudo mv mdbook /usr/local/bin/

    - name: Create mdBook structure
      run: |
        mkdir -p docs/book/src
        
        # Create book.toml
        cat > docs/book/book.toml << 'EOF'
        [book]
        authors = ["BitTribe"]
        language = "en"
        multilingual = false
        src = "src"
        title = "TribeChain Documentation"
        description = "Complete guide to TribeChain blockchain platform"

        [build]
        build-dir = "../../target/book"

        [output.html]
        default-theme = "navy"
        preferred-dark-theme = "navy"
        git-repository-url = "https://github.com/BitTribe/TribeChain"
        edit-url-template = "https://github.com/BitTribe/TribeChain/edit/main/{path}"

        [output.html.search]
        enable = true

        [output.html.print]
        enable = true
        EOF

        # Create SUMMARY.md
        cat > docs/book/src/SUMMARY.md << 'EOF'
        # Summary

        [Introduction](./introduction.md)

        # User Guide
        - [Installation](./installation.md)
        - [Quick Start](./quick-start.md)
        - [CLI Reference](./cli-reference.md)
        - [Configuration](./configuration.md)

        # Core Concepts
        - [Blockchain](./blockchain.md)
        - [AI3 Tensor Mining](./ai3-mining.md)
        - [Token System](./tokens.md)
        - [Smart Contracts](./contracts.md)
        - [P2P Network](./network.md)

        # Development
        - [Architecture](./architecture.md)
        - [API Reference](./api-reference.md)
        - [ESP32 Mining](./esp32-mining.md)
        - [Contributing](./contributing.md)

        # Appendix
        - [Glossary](./glossary.md)
        - [FAQ](./faq.md)
        - [Troubleshooting](./troubleshooting.md)
        EOF

    - name: Generate documentation pages
      run: |
        # Introduction
        cat > docs/book/src/introduction.md << 'EOF'
        # Introduction

        TribeChain is an innovative blockchain platform that combines traditional blockchain technology with AI-powered tensor operations. It features a unique mining algorithm optimized for small CPUs like ESP32 and ESP8266, making it accessible for IoT devices and edge computing.

        ## Key Features

        - **AI3 Tensor Mining**: Revolutionary mining algorithm using tensor operations
        - **Multi-Token System**: TRIBE, STOMP, and AUM tokens
        - **ESP32/ESP8266 Support**: IoT-friendly mining
        - **Smart Contracts**: Token operations and staking
        - **P2P Network**: Distributed computing and consensus

        ## Getting Started

        To get started with TribeChain, see the [Installation](./installation.md) guide.
        EOF

        # Installation
        cat > docs/book/src/installation.md << 'EOF'
        # Installation

        ## Prerequisites

        - Rust 1.70 or later
        - Git
        - System dependencies (varies by platform)

        ## From Source

        ```bash
        git clone https://github.com/BitTribe/TribeChain.git
        cd TribeChain
        cargo build --release
        ```

        ## Using Cargo

        ```bash
        cargo install --git https://github.com/BitTribe/TribeChain.git
        ```

        ## Docker

        ```bash
        docker pull bittribe/tribechain:latest
        docker run -p 8333:8333 bittribe/tribechain
        ```
        EOF

        # Quick Start
        cat > docs/book/src/quick-start.md << 'EOF'
        # Quick Start

        ## Start a Node

        ```bash
        tribechain node
        ```

        ## Create a Wallet

        ```bash
        tribechain wallet create alice
        ```

        ## Start Mining

        ```bash
        tribechain mine alice
        ```

        ## Check Balance

        ```bash
        tribechain wallet balance alice
        ```
        EOF

        # Create other placeholder pages
        for page in cli-reference configuration blockchain ai3-mining tokens contracts network architecture api-reference esp32-mining contributing glossary faq troubleshooting; do
          echo "# ${page^}" > "docs/book/src/${page}.md"
          echo "" >> "docs/book/src/${page}.md"
          echo "Documentation for ${page} coming soon..." >> "docs/book/src/${page}.md"
        done

    - name: Build documentation book
      run: |
        cd docs/book
        mdbook build

    - name: Combine documentation
      run: |
        mkdir -p target/combined-docs
        cp -r target/doc target/combined-docs/api
        cp -r target/book target/combined-docs/book
        
        # Create index page
        cat > target/combined-docs/index.html << 'EOF'
        <!DOCTYPE html>
        <html>
        <head>
            <title>TribeChain Documentation</title>
            <style>
                body { font-family: Arial, sans-serif; margin: 40px; }
                .container { max-width: 800px; margin: 0 auto; }
                .card { border: 1px solid #ddd; padding: 20px; margin: 20px 0; border-radius: 8px; }
                .card h2 { margin-top: 0; }
                .card a { text-decoration: none; color: #0066cc; }
                .card a:hover { text-decoration: underline; }
            </style>
        </head>
        <body>
            <div class="container">
                <h1>TribeChain Documentation</h1>
                <p>Welcome to the TribeChain documentation portal.</p>
                
                <div class="card">
                    <h2><a href="book/">User Guide</a></h2>
                    <p>Complete guide for users, including installation, configuration, and usage instructions.</p>
                </div>
                
                <div class="card">
                    <h2><a href="api/">API Documentation</a></h2>
                    <p>Detailed API documentation generated from the Rust source code.</p>
                </div>
            </div>
        </body>
        </html>
        EOF

    - name: Upload documentation artifacts
      uses: actions/upload-artifact@v4
      with:
        name: documentation
        path: target/combined-docs/

  deploy-docs:
    name: Deploy Documentation
    runs-on: ubuntu-latest
    needs: generate-docs
    if: github.ref == 'refs/heads/main'
    
    permissions:
      contents: read
      pages: write
      id-token: write
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Download documentation
      uses: actions/download-artifact@v4
      with:
        name: documentation
        path: ./docs

    - name: Setup Pages
      uses: actions/configure-pages@v5

    - name: Upload to GitHub Pages
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./docs

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

  check-links:
    name: Check Documentation Links
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install markdown-link-check
      run: npm install -g markdown-link-check

    - name: Check README links
      run: markdown-link-check README.md

    - name: Check all markdown files
      run: |
        find . -name "*.md" -not -path "./target/*" -not -path "./.git/*" | \
        xargs -I {} markdown-link-check {} --config .github/markdown-link-check.json || true

    - name: Create link check config
      run: |
        mkdir -p .github
        cat > .github/markdown-link-check.json << 'EOF'
        {
          "ignorePatterns": [
            {
              "pattern": "^http://localhost"
            },
            {
              "pattern": "^https://localhost"
            },
            {
              "pattern": "^http://192.168"
            },
            {
              "pattern": "^https://192.168"
            }
          ],
          "timeout": "20s",
          "retryOn429": true,
          "retryCount": 3,
          "fallbackRetryDelay": "30s",
          "aliveStatusCodes": [200, 206]
        }
        EOF 